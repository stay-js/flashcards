// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider     = "mysql"
    url          = env("DATABASE_URL")
    relationMode = "prisma"
}

enum Visibility {
    PUBLIC
    PRIVATE
}

model Set {
    id          String     @id @default(cuid())
    user        User       @relation(fields: [userId], references: [id], onDelete: Cascade)
    userId      String
    name        String     @db.VarChar(50)
    description String     @db.VarChar(200)
    visibility  Visibility
    cards       Card[]
    createdAt   DateTime   @default(now())

    @@index([userId])
}

model Card {
    id        String   @id @default(cuid())
    set       Set      @relation(fields: [setId], references: [id], onDelete: Cascade)
    setId     String
    front     String   @db.VarChar(200)
    back      String   @db.VarChar(500)
    createdAt DateTime @default(now())

    @@index([setId])
}

// Necessary for Next auth
model Account {
    id                String  @id @default(cuid())
    userId            String
    type              String
    provider          String
    providerAccountId String
    refresh_token     String?
    access_token      String?
    expires_at        Int?
    token_type        String?
    scope             String?
    id_token          String?
    session_state     String?
    user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@unique([provider, providerAccountId])
    @@index([userId])
}

model Session {
    id           String   @id @default(cuid())
    sessionToken String   @unique
    userId       String
    expires      DateTime
    user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@index([userId])
}

model User {
    id            String    @id @default(cuid())
    name          String?
    email         String?   @unique
    emailVerified DateTime?
    image         String?
    accounts      Account[]
    sessions      Session[]
    sets          Set[]
}

model VerificationToken {
    id         String   @id @default(cuid())
    identifier String
    token      String   @unique
    expires    DateTime

    @@unique([identifier, token])
}
